
dtmc

const double a;
const double b;
const double c;
// module for process 1
module target_system

	t: [0..15] init 0;
	// init-t=0, stopMsg-t=1, pButtonMsg-t=2,
	// vitalParamMsg-t=3, notifyPA-t=4, exit-t=5,
	// alarm-t=6, analyzeData-t=7, FAS-t=8,
	// changeDrug-t=9, changeDoses-t=10, result-t=11,
	// failedAlarm-t=12, failedChangeDrug-t=13,
	// failedAnalysis-t=14, failedChangeDose-t=15
	// end-t=16
	[] (t=0) -> 0.1:(t'=1) + 0.3:(t'=2) + 0.6:(t'=3);
	[] (t=1) -> (t'=5);
	[] (t=2) -> (t'=6);
	[] (t=3) -> (t'=7);
	[] (t=6) -> a:(t'=12) + (1-a):(t'=8);
	[] (t=7) -> c:(t'=14) + (1-c):(t'=11);
	[] (t=8) -> (t'=0);
	[] (t=9) -> b:(t'=13) + (1-b):(t'=4);
	[] (t=11) -> 0.43:(t'=10) + 0.45:(t'=9) + 0.12:(t'=6); 

	// termination
	[] (t=5) -> (t'=16);
	[] (t=12) -> (t'=16);
	[] (t=13) -> (t'=16);
	[] (t=14) -> (t'=16);
	[] (t=15) -> (t'=16);	
endmodule


// formula, for use in properties: number of tokens
// (i.e. number of processes that have the same value as the process to their left)
//formula num_tokens = (x1=x2?1:0)+(x2=x3?1:0)+(x3=x4?1:0)+(x4=x5?1:0)+(x5=x6?1:0)+(x6=x7?1:0)+(x7=x1?1:0);

// rewards (to calculate expected number of steps)
rewards "steps"
	true : 1;
endrewards